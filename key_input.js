// Generated by CoffeeScript 1.7.1
(function() {
  var i, keys, previousKeys, respondToKeyDownFunction, _i;

  keys = [];

  previousKeys = [];

  for (i = _i = 0; _i < 255; i = ++_i) {
    keys[i] = false;
    previousKeys[i] = false;
  }

  respondToKeyDownFunction = null;

  window.onKeyDown = function(event) {
    if (event == null) {
      event = window.event;
    }
    keys[event.keyCode] = true;
    if (respondToKeyDownFunction != null) {
      return respondToKeyDownFunction(event.keyCode);
    }
  };

  window.onKeyUp = function(event) {
    if (event == null) {
      event = window.event;
    }
    return keys[event.keyCode] = false;
  };

  window.updateKeys = function() {
    var _j, _ref;
    for (i = _j = 0, _ref = keys.length; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
      previousKeys[i] = keys[i];
    }
    return null;
  };

  window.cleanKeys = function() {
    var _j, _ref;
    for (i = _j = 0, _ref = keys.length; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
      keys[i] = false;
      previousKeys[i] = false;
    }
    return null;
  };

  window.Key = {
    JUMP: [38, 87, 32, 13],
    PAUSE: [27, 80]
  };

  window.isKeyDownIn = function(key, array) {
    var _j, _ref;
    for (i = _j = 0, _ref = key.length; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
      if (array[key[i]]) {
        return true;
      }
    }
    return false;
  };

  window.isKeyDown = function(key) {
    return isKeyDownIn(key, keys);
  };

  window.isKeyUp = function(key) {
    return !isKeyDown(key);
  };

  window.wasKeyDown = function(key) {
    return isKeyDownIn(key, previousKeys);
  };

  window.wasKeyUp = function(key) {
    return !wasKeyDown(key);
  };

  window.isKeyPressed = function(key) {
    return isKeyDown(key) && !wasKeyDown(key);
  };

  window.setRespondToKeyDownFunction = function(func) {
    return respondToKeyDownFunction = func;
  };

}).call(this);
