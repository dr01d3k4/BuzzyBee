// Generated by CoffeeScript 1.7.1
(function() {
  window.sortScoreArray = function(scores) {
    return scores.sort(function(a, b) {
      return b[0] - a[0];
    });
  };

  window.getSaveExpire = function() {
    var now;
    now = new Date();
    now.setFullYear(now.getFullYear() + 5);
    return now.toUTCString();
  };

  window.clearSave = function() {
    document.cookie = "";
    return document.cookie = GAME_NAME + "=; expires=" + getSaveExpire();
  };

  window.saveGame = function(data) {
    var name, saveString, score, _i, _len, _ref, _ref1;
    saveString = "";
    saveString += data.GAME_NAME + "=";
    saveString += data.GAME_NAME + SAVE_SEPERATOR + data.GAME_VERSION + SAVE_SEPERATOR;
    if (data[SAVE_HIGHSCORE_TITLE] != null) {
      sortScoreArray(data[SAVE_HIGHSCORE_TITLE]);
      data[SAVE_HIGHSCORE_TITLE].splice(SAVE_HIGHSCORE_COUNT);
      saveString += SAVE_HIGHSCORE_TITLE + SAVE_SEPERATOR + data[SAVE_HIGHSCORE_TITLE].length + SAVE_SEPERATOR;
      _ref = data[SAVE_HIGHSCORE_TITLE];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], score = _ref1[0], name = _ref1[1];
        saveString += score + SAVE_SEPERATOR + name + SAVE_SEPERATOR;
      }
    }
    if (data[SAVE_LAST_NAME_TITLE] != null) {
      saveString += SAVE_LAST_NAME_TITLE + SAVE_SEPERATOR + data[SAVE_LAST_NAME_TITLE] + SAVE_SEPERATOR;
    }
    if (saveString.endsWith(SAVE_SEPERATOR)) {
      saveString = saveString.substr(0, saveString.length - 1);
    }
    saveString += "; expires=" + getSaveExpire();
    console.log("Saving", saveString);
    return document.cookie = saveString;
  };

  window.loadGame = function() {
    var countScores, data, decodedData, highscores, i, j, name, score, _i;
    console.log("Loading", document.cookie);
    data = document.cookie.split("=")[1].split(";")[0];
    console.log("Data", data);
    if (!document.cookie.startsWith(GAME_NAME)) {
      console.log("Save data doesn't start with GAME_NAME");
      decodedData = {
        GAME_NAME: "",
        GAME_VERSION: ""
      };
      decodedData[SAVE_HIGHSCORE_TITLE] = [];
      decodedData[SAVE_LAST_NAME_TITLE] = "";
      return decodedData;
    }
    data = data.split(SAVE_SEPERATOR);
    decodedData = {
      GAME_NAME: data[0],
      GAME_VERSION: data[1]
    };
    decodedData[SAVE_HIGHSCORE_TITLE] = [];
    decodedData[SAVE_LAST_NAME_TITLE] = "";
    i = 2;
    while (i < data.length) {
      if (data[i] === SAVE_HIGHSCORE_TITLE) {
        highscores = [];
        i += 1;
        countScores = parseInt(data[i]);
        for (j = _i = 0; 0 <= countScores ? _i < countScores : _i > countScores; j = 0 <= countScores ? ++_i : --_i) {
          i += 1;
          score = parseInt(data[i]);
          i += 1;
          name = data[i];
          highscores.push([score, name]);
        }
        sortScoreArray(highscores);
        decodedData[SAVE_HIGHSCORE_TITLE] = highscores;
      } else if (data[i] === SAVE_LAST_NAME_TITLE) {
        i += 1;
        decodedData[SAVE_LAST_NAME_TITLE] = data[i];
      }
      i += 1;
    }
    return decodedData;
  };

  window.addScore = function(score, name) {
    var data;
    if (score == null) {
      score = 0;
    }
    if (name == null) {
      name = "";
    }
    console.log("Saving \"" + score + "\" by \"" + name + "\"");
    data = loadGame();
    data["GAME_NAME"] = GAME_NAME;
    data["GAME_VERSION"] = GAME_VERSION;
    data[SAVE_HIGHSCORE_TITLE].push([score, name]);
    data[SAVE_LAST_NAME_TITLE] = name;
    return saveGame(data);
  };

}).call(this);
