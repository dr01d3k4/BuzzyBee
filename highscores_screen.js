// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.HighscoresScreen = (function(_super) {
    __extends(HighscoresScreen, _super);

    function HighscoresScreen() {
      this.scores = loadGame()[SAVE_HIGHSCORE_TITLE];
      sortScoreArray(this.scores);
      this.scores.splice(SAVE_HIGHSCORE_COUNT);
      this.menuButton = new Button({
        x: GAME_OVERLAY_X + GAME_OVERLAY_BUTTON_MARGIN,
        y: GAME_OVERLAY_Y + GAME_OVERLAY_HEIGHT - GAME_OVERLAY_BUTTON_MARGIN - GAME_OVERLAY_BUTTON_HEIGHT,
        width: GAME_OVERLAY_BUTTON_WIDTH,
        height: GAME_OVERLAY_BUTTON_HEIGHT,
        text: "Menu",
        hoveredText: "> Menu <"
      });
      this.clearScores = new Button({
        x: GAME_OVERLAY_X + GAME_OVERLAY_BUTTON_MARGIN + (GAME_OVERLAY_WIDTH * 0.5),
        y: GAME_OVERLAY_Y + GAME_OVERLAY_HEIGHT - GAME_OVERLAY_BUTTON_MARGIN - GAME_OVERLAY_BUTTON_HEIGHT,
        width: GAME_OVERLAY_BUTTON_WIDTH,
        height: GAME_OVERLAY_BUTTON_HEIGHT,
        text: "Clear scores",
        hoveredText: "> Clear scores <"
      });
    }

    HighscoresScreen.prototype.update = function(deltaTime) {
      this.menuButton.update(deltaTime);
      this.clearScores.update(deltaTime);
      if (this.menuButton.clicked) {
        changeScreen(new MainMenuScreen());
        return;
      }
      if (this.clearScores.clicked) {
        clearSave();
        changeScreen(new HighscoresScreen());
      }
    };

    HighscoresScreen.prototype.render = function(context) {
      var i, y, _i;
      context.drawImage(backgroundCanvas, 0, 0);
      context.fillStyle = Colour.TEXT_BACKGROUND;
      context.fillRect(GAME_OVERLAY_X, GAME_OVERLAY_Y, GAME_OVERLAY_WIDTH, GAME_OVERLAY_HEIGHT);
      context.beginPath();
      context.strokeStyle = Colour.TEXT;
      context.lineWidth = OUTLINE_THICKNESS;
      context.rect(GAME_OVERLAY_X, GAME_OVERLAY_Y, GAME_OVERLAY_WIDTH, GAME_OVERLAY_HEIGHT);
      context.stroke();
      context.fillStyle = Colour.TEXT;
      context.font = GAME_OVERLAY_TITLE_FONT;
      context.textAlign = "center";
      context.textBaseline = "middle";
      context.fillText("Highscores", GAME_OVERLAY_TITLE_TEXT_X, GAME_OVERLAY_TITLE_TEXT_Y);
      context.textAlign = "left";
      context.font = BODY_FONT;
      y = GAME_OVERLAY_BODY_TEXT_Y * 0.7;
      for (i = _i = 0; 0 <= SAVE_HIGHSCORE_COUNT ? _i < SAVE_HIGHSCORE_COUNT : _i > SAVE_HIGHSCORE_COUNT; i = 0 <= SAVE_HIGHSCORE_COUNT ? ++_i : --_i) {
        context.fillText("" + (i + 1) + ": " + (i < this.scores.length ? this.scores[i][0].toString() + ' - ' + this.scores[i][1] : '0'), GAME_OVERLAY_BODY_TEXT_X * 0.6, y);
        y += 32;
      }
      this.menuButton.render(context);
      return this.clearScores.render(context);
    };

    return HighscoresScreen;

  })(Screen);

}).call(this);
