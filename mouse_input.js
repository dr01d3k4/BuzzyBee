// Generated by CoffeeScript 1.7.1
(function() {
  var getMousePosition, mouse, mouseLetGo, previousMouse, setMousePosition;

  mouse = {
    down: false,
    x: -1,
    y: -1
  };

  previousMouse = {
    down: false,
    x: -1,
    y: -1
  };

  mouseLetGo = false;

  window.updateMouse = function() {
    previousMouse.down = mouse.down;
    previousMouse.x = mouse.x;
    previousMouse.y = mouse.y;
    if (mouseLetGo) {
      mouse.down = false;
      return mouseLetGo = false;
    }
  };

  getMousePosition = function(event) {
    var x, y;
    x = -1;
    y = -1;
    if ((event.x == null) || (event.y == null)) {
      x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
      y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;
    } else {
      x = event.x;
      y = event.y;
    }
    x -= canvas.offsetLeft + CANVAS_BORDER_THICKNESS;
    y -= canvas.offsetTop + CANVAS_BORDER_THICKNESS;
    return [x, y];
  };

  setMousePosition = function(event) {
    var _ref;
    if (event == null) {
      event = window.event;
    }
    return _ref = getMousePosition(event), mouse.x = _ref[0], mouse.y = _ref[1], _ref;
  };

  window.onMouseDown = function(event) {
    if (event == null) {
      event = window.event;
    }
    mouse.down = true;
    return setMousePosition(event);
  };

  window.onMouseMove = function(event) {
    if (event == null) {
      event = window.event;
    }
    return setMousePosition(event);
  };

  window.onMouseUp = function(event) {
    if (event == null) {
      event = window.event;
    }
    mouseLetGo = true;
    return setMousePosition(event);
  };

  window.isMouseDown = function() {
    return mouse.down;
  };

  window.isMouseUp = function() {
    return !mouse.down;
  };

  window.isMousePressed = function() {
    return mouse.down && !previousMouse.down;
  };

  window.getMouseX = function() {
    return mouse.x;
  };

  window.getMouseY = function() {
    return mouse.y;
  };

  window.wasMouseDown = function() {
    return previousMouse.down;
  };

  window.wasMouseUp = function() {
    return !previousMouse.down;
  };

  window.setMouseDown = function(down) {
    if (down == null) {
      down = false;
    }
    return mouse.down = down;
  };

}).call(this);
