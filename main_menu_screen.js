// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.MainMenuScreen = (function(_super) {
    __extends(MainMenuScreen, _super);

    function MainMenuScreen() {
      var MAIN_BUTTON_HEIGHT, MAIN_BUTTON_MARGIN, MAIN_BUTTON_START_Y, MAIN_BUTTON_WIDTH, MAIN_BUTTON_X;
      createBackgroundCanvas(Math.random() < DAYTIME_CHANCE);
      this.game = new GameScreen(false);
      MAIN_BUTTON_MARGIN = MAIN_PLAY_BOX_HEIGHT / 10;
      MAIN_BUTTON_X = MAIN_PLAY_BOX_X + (MAIN_PLAY_BOX_WIDTH * 0.05);
      MAIN_BUTTON_START_Y = MAIN_PLAY_BOX_Y + MAIN_BUTTON_MARGIN;
      MAIN_BUTTON_WIDTH = MAIN_PLAY_BOX_WIDTH * 0.9;
      MAIN_BUTTON_HEIGHT = MAIN_PLAY_BOX_HEIGHT / 5;
      this.playButton = new Button({
        x: MAIN_BUTTON_X,
        y: MAIN_BUTTON_START_Y,
        width: MAIN_BUTTON_WIDTH,
        height: MAIN_BUTTON_HEIGHT,
        text: "Play!",
        hoveredText: "> Play! <"
      });
      this.helpButton = new Button({
        x: MAIN_BUTTON_X,
        y: MAIN_BUTTON_START_Y + (MAIN_BUTTON_HEIGHT + MAIN_BUTTON_MARGIN),
        width: MAIN_BUTTON_WIDTH,
        height: MAIN_BUTTON_HEIGHT,
        text: "Help!",
        hoveredText: "> Help! <"
      });
      this.highscoresButton = new Button({
        x: MAIN_BUTTON_X,
        y: MAIN_BUTTON_START_Y + (2 * (MAIN_BUTTON_HEIGHT + MAIN_BUTTON_MARGIN)),
        width: MAIN_BUTTON_WIDTH,
        height: MAIN_BUTTON_HEIGHT,
        text: "Highscores",
        hoveredText: "> Highscores <"
      });
    }

    MainMenuScreen.prototype.update = function(deltaTime) {
      this.game.update(deltaTime);
      this.playButton.update(deltaTime);
      this.helpButton.update(deltaTime);
      this.highscoresButton.update(deltaTime);
      if (isKeyPressed(Key.JUMP) || this.playButton.clicked) {
        changeScreen(new GameScreen());
        return;
      }
      if (this.helpButton.clicked) {
        changeScreen(new HelpScreen());
        return;
      }
      if (this.highscoresButton.clicked) {
        changeScreen(new HighscoresScreen());
      }
    };

    MainMenuScreen.prototype.render = function(context) {
      var height, titleText, width;
      this.game.render(context);
      context.font = GAME_OVERLAY_TITLE_FONT;
      context.textAlign = "center";
      context.textBaseline = "middle";
      titleText = "Buzzy Bee!";
      width = context.measureText(titleText).width + MAIN_TITLE_EXTRA_WIDTH;
      height = 45;
      context.translate(MAIN_TITLE_X, MAIN_TITLE_Y);
      context.rotate(MAIN_TITLE_ANGLE);
      context.fillStyle = Colour.TEXT_BACKGROUND;
      context.fillRect(-width / 2, -MAIN_TITLE_HEIGHT / 2, width, MAIN_TITLE_HEIGHT);
      context.beginPath();
      context.strokeStyle = Colour.TEXT;
      context.lineWidth = OUTLINE_THICKNESS;
      context.rect(-width / 2, -MAIN_TITLE_HEIGHT / 2, width, MAIN_TITLE_HEIGHT);
      context.stroke();
      context.fillStyle = Colour.TEXT;
      context.fillText("Buzzy Bee!", 0, 0);
      context.rotate(-MAIN_TITLE_ANGLE);
      context.translate(-MAIN_TITLE_X, -MAIN_TITLE_Y);
      context.fillStyle = Colour.TEXT_BACKGROUND;
      context.fillRect(MAIN_PLAY_BOX_X, MAIN_PLAY_BOX_Y, MAIN_PLAY_BOX_WIDTH, MAIN_PLAY_BOX_HEIGHT);
      context.beginPath();
      context.strokeStyle = Colour.TEXT;
      context.lineWidth = OUTLINE_THICKNESS;
      context.rect(MAIN_PLAY_BOX_X, MAIN_PLAY_BOX_Y, MAIN_PLAY_BOX_WIDTH, MAIN_PLAY_BOX_HEIGHT);
      context.stroke();
      this.playButton.render(context);
      this.helpButton.render(context);
      return this.highscoresButton.render(context);
    };

    return MainMenuScreen;

  })(Screen);

}).call(this);
